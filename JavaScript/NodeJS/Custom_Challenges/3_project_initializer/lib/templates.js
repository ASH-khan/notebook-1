function setHtml(title) {
var html = `
<!DOCTYPE html>
<html>
  <head>
    <title>${title}</title>
    <meta name="description" content="Index Page of ${title}">
    <meta charset="utf-8">
    <link rel="stylesheet" href="css/style.css">
  </head>
  <body>
    <h1>${title}</h1>
    <script src="js/script.js"></script>
  </body>
</html>
`.trim();
return html;
}

function setCss() {
var css = `
body {
  background-color: #e0e0e0;
}

h1 {
  margin: auto 25px;
  text-align: center;
  font-family: Arial, sans-serif;
  color: #3d3d3d;
}
`.trim();
return css;
}

function setJs() {
var js = `
window.onload = function() {
  // script here
}
`.trim();
return js;
}

function setGitignore() {
var gitignore = `
#File system files
.DS_Store

# Created by https://www.gitignore.io/api/node
#
# ### Node ###
## Logs
logs
*.log
# npm-debug.log*
#
# # Runtime data
pids
*.pid
*.seed
#
# # Directory for instrumented libs generated by jscoverage/JSCover
lib-cov
#
# # Coverage directory used by tools like istanbul
coverage
#
# # Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt
Gruntfile.js
#
# # node-waf configuration
.lock-wscript
#
# # Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release
#
# # Dependency directories
node_modules
jspm_packages
/node_modules/*/node-modules/
#
#
# # Optional npm cache directory
.npm
#
# # Optional REPL history
.node_repl_history
#
`.trim();
return gitignore;
}

function setReadme(title) {
var readme = `
# ${title}
`.trim();
return readme;
}

function setGruntfile() {
var gruntfile = `
module.exports = function (grunt) {
    grunt.initConfig({
        // Task configuration
    });
    grunt.loadNpmTasks();   // Load tasks
};
`.trim();
return gruntfile;
}

function setTest(filename) {
var test = `
var mocha = require("mocha");
var chai = require("chai").expect;
var unit = require("${filename}");

describe("", function() {
  it("", function() {
  })
});
`.trim();
return test;
}

module.exports = {
  setHtml: setHtml,
  setCss: setCss,
  setJs: setJs,
  setGitignore: setGitignore,
  setReadme: setReadme,
  setGruntfile: setGruntfile,
  setTest: setTest
};
